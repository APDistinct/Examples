use [FLChat]
go

IF OBJECT_ID (N'Usr.User_GetChildsMulti', N'TF') IS NOT NULL  
    DROP FUNCTION [Usr].[User_GetChildsMulti];  
GO  

create function [Usr].[User_GetChildsMulti](
   @usersId [dbo].[GuidList] readonly,
   @maxDeep integer = null,
   @includeDeleted bit = 0)
RETURNS @ids TABLE (
  [UserId] uniqueidentifier NOT NULL,
  [Deep] integer NOT NULL,
  [OwnerUserId] uniqueidentifier NOT NULL  
)
as
begin
  --declare @ids [Usr].[UserIdDeep];
  declare @deep integer;
  set @deep = 1;

  insert into @ids ([UserId], [Deep], [OwnerUserId])
  select DISTINCT u.[Id], @deep, o.[Guid]
  from [Usr].[User] u 
  inner join @usersId o on u.[OwnerUserId] = o.[Guid]
  where (u.[Enabled] = 1 or @includeDeleted = 1);

  while @deep < @maxDeep or @maxDeep is null
  begin
    insert into @ids ([UserId], [Deep], [OwnerUserId])
	select DISTINCT u.[Id], @deep + 1, o.[OwnerUserId]
	from [Usr].[User] u
	inner join @ids o on o.[UserId] = u.[OwnerUserId] and o.[Deep] = @deep
	where ([Enabled] = 1 or @includeDeleted = 1)
	  and [Id] not in (select [UserId] from @ids);

	if @@ROWCOUNT = 0 break;

	set @deep = @deep + 1;
  end

  RETURN
end;
go