//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FLChat.DAL.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChatEntities : DbContext
    {
        public ChatEntities()
            : base("name=ChatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AuthToken> AuthToken { get; set; }
        public virtual DbSet<SmsCode> SmsCode { get; set; }
        public virtual DbSet<EventType> EventType { get; set; }
        public virtual DbSet<MessageType> MessageType { get; set; }
        public virtual DbSet<TransportType> TransportType { get; set; }
        public virtual DbSet<Transport> Transport { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserAvatar> UserAvatar { get; set; }
        public virtual DbSet<UserDefaultTransportView> UserDefaultTransportView { get; set; }
        public virtual DbSet<MessageToUser> MessageToUser { get; set; }
        public virtual DbSet<Event> Event { get; set; }
        public virtual DbSet<Message> Message { get; set; }
        public virtual DbSet<MediaType> MediaType { get; set; }
        public virtual DbSet<Group> Group { get; set; }
        public virtual DbSet<GroupMember> GroupMember { get; set; }
        public virtual DbSet<MessageError> MessageError { get; set; }
        public virtual DbSet<Segment> Segment { get; set; }
        public virtual DbSet<MessageTransportId> MessageTransportId { get; set; }
        public virtual DbSet<StructureNodeSegment> StructureNodeSegment { get; set; }
        public virtual DbSet<StructureNode> StructureNode { get; set; }
        public virtual DbSet<MessageToSegment> MessageToSegment { get; set; }
        public virtual DbSet<Rank> Rank { get; set; }
        public virtual DbSet<UserSentry> UserSentry { get; set; }
        public virtual DbSet<Settings> Settings { get; set; }
        public virtual DbSet<WebChatDeepLink> WebChatDeepLink { get; set; }
        public virtual DbSet<LastMessageView> LastMessageView { get; set; }
        public virtual DbSet<Comment> Comment { get; set; }
        public virtual DbSet<ExternalTransportButton> ExternalTransportButton { get; set; }
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<Region> Region { get; set; }
        public virtual DbSet<FileInfo> FileInfo { get; set; }
        public virtual DbSet<MediaTypeGroup> MediaTypeGroup { get; set; }
        public virtual DbSet<MessageCountOverToday> MessageCountOverToday { get; set; }
        public virtual DbSet<UserMailingTransportView> UserMailingTransportView { get; set; }
        public virtual DbSet<MessageToSelection> MessageToSelection { get; set; }
        public virtual DbSet<MessageStatsGroupedView> MessageStatsGroupedView { get; set; }
        public virtual DbSet<MessageStatsRowsView> MessageStatsRowsView { get; set; }
        public virtual DbSet<Scenario> Scenario { get; set; }
        public virtual DbSet<ScenarioStep> ScenarioStep { get; set; }
        public virtual DbSet<ScenarioProcess> ScenarioProcess { get; set; }
        public virtual DbSet<UserData> UserData { get; set; }
        public virtual DbSet<UserDataKey> UserDataKey { get; set; }
    
        public virtual int SetLastDeliveredEvent(Nullable<System.Guid> userId, Nullable<long> eventId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetLastDeliveredEvent", userIdParameter, eventIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> MergeUsers(Nullable<System.Guid> master, Nullable<System.Guid> donor)
        {
            var masterParameter = master.HasValue ?
                new ObjectParameter("master", master) :
                new ObjectParameter("master", typeof(System.Guid));
    
            var donorParameter = donor.HasValue ?
                new ObjectParameter("donor", donor) :
                new ObjectParameter("donor", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("MergeUsers", masterParameter, donorParameter);
        }
    
        [DbFunction("ChatEntities", "User_GetParents")]
        public virtual IQueryable<User_GetParents_Result> User_GetParents(Nullable<System.Guid> userId, Nullable<int> maxDeep)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var maxDeepParameter = maxDeep.HasValue ?
                new ObjectParameter("maxDeep", maxDeep) :
                new ObjectParameter("maxDeep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<User_GetParents_Result>("[ChatEntities].[User_GetParents](@userId, @maxDeep)", userIdParameter, maxDeepParameter);
        }
    
        [DbFunction("ChatEntities", "User_GetAddresseesForExternalTrans")]
        public virtual IQueryable<User_GetAddresseesForExternalTrans_Result> User_GetAddresseesForExternalTrans(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<User_GetAddresseesForExternalTrans_Result>("[ChatEntities].[User_GetAddresseesForExternalTrans](@userId)", userIdParameter);
        }
    
        [DbFunction("ChatEntities", "User_GetChilds")]
        public virtual IQueryable<User_GetChilds_Result> User_GetChilds(Nullable<System.Guid> userId, Nullable<int> maxDeep, Nullable<bool> includeDeleted)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var maxDeepParameter = maxDeep.HasValue ?
                new ObjectParameter("maxDeep", maxDeep) :
                new ObjectParameter("maxDeep", typeof(int));
    
            var includeDeletedParameter = includeDeleted.HasValue ?
                new ObjectParameter("includeDeleted", includeDeleted) :
                new ObjectParameter("includeDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<User_GetChilds_Result>("[ChatEntities].[User_GetChilds](@userId, @maxDeep, @includeDeleted)", userIdParameter, maxDeepParameter, includeDeletedParameter);
        }
    
        [DbFunction("ChatEntities", "BroadcastProhibition_Structure")]
        public virtual IQueryable<Nullable<System.Guid>> BroadcastProhibition_Structure(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<System.Guid>>("[ChatEntities].[BroadcastProhibition_Structure](@userId)", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Update_OwnerUserId_By_ParentFLUserNumber()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Update_OwnerUserId_By_ParentFLUserNumber");
        }
    
        public virtual int User_UpdateDeepChilds(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_UpdateDeepChilds", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> User_DisableNotImportedUsers(Nullable<System.Guid> userId, Nullable<int> userNumber, Nullable<int> passedHours)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var userNumberParameter = userNumber.HasValue ?
                new ObjectParameter("userNumber", userNumber) :
                new ObjectParameter("userNumber", typeof(int));
    
            var passedHoursParameter = passedHours.HasValue ?
                new ObjectParameter("passedHours", passedHours) :
                new ObjectParameter("passedHours", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("User_DisableNotImportedUsers", userIdParameter, userNumberParameter, passedHoursParameter);
        }
    
        public virtual int DelUserData(Nullable<System.Guid> userId, string key)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DelUserData", userIdParameter, keyParameter);
        }
    
        public virtual int SetUserData(Nullable<System.Guid> userId, string key, string data)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetUserData", userIdParameter, keyParameter, dataParameter);
        }
    }
}
