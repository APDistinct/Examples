Как регистрируются сообщения в [Msg].[Message]:

I. Сообщение между двумя пользователями FLChat
    [FromUserId] = ...
    [MessageTypeId] = 0
    [ToUserId] = ...
    [TransportId] = NULL
    [TransportMsgId] = NULL
    [Income] = NULL
    
II. Отправка сообщения от пользователя FLChat другому пользователю через внешний канал    
    [FromUserId] = ...
    [MessageTypeId] = 0
    [ToUserId] = ...
    [TransportId] = указывается канал пользователя
    [TransportMsgId] = указывается идентификатор сообщения во внешней системе, если есть
    [Income] = 0
    
XI. Приходит сообщение из телеграмма персонально боту(Т)
  1. Проверяем идентификатор пользователя из Т в таблице [Usr].[Transport] ([TransportTypeId] = 1 AND [TransportOuterId] = T.user_id) 
  2. Если это сообщение вида /start [Token] (см XXXI) и токен содержиться в таблице [Msg].[TelegramToken] то 10   
  3. Если пользователь найден и это клиент, то находим его консультанта и регистрируем сообщение
    [FromUserId] = пользователь из шага 1
    [MessageTypeId] = 0
    [ToUserId] = консультант
    [TransportId] = транспорт из шага 1
    [TransportMsgId] = идентификатор сообщения из Т
    [Income] = 1
    и завершаем
  4. Если пользователь найден и это консультант, то кому адресовать его сообщение?  
  5. Если мы запрашивали у этого пользователя номер телефона (см п6) и это ответ с номером телефона, то получить первоначальное сообщение и к XXI
  6а. Если транспорт с таким идентификатором не найден, то надо куда то сохранить сообщение и запросить у пользователя номер телефона (SendMessage with KeyboardButton) и записать туда же что запросили телефон. В каком виде придёт ответ пользователя? Завершить  
  6б. Или может сразу направить пользователя к "дежурному оператору" и он пусть разбирается?
  6c. Или диалог: запрос у пользователя номер телефона (SendMessage with KeyboardButton); отправка к дежурному консультанту; отправка к конкретному консультанту с поиском по номеру/ФИО/телефону/почте введённого пользователем?
  
  --пришёл по токену
  10. Если такой транспорт не найден на шаге 1, то регистрируем транспорт в [Usr].[Transport] и отправляем пользователя к его консультанту 
    [FromUserId] = ...
    [MessageTypeId] = 100 'Initial chat'
    [ToUserId] = консультанта
    [TransportId] = ...
    [TransportMsgId] = ....
    [Income] = 1
    [Text] = NULL
  11. Если такой транспорт найден и он принадлежит тому же клиенту, то просто отправляем пользователя к его консультанту (тут надо событие о начале беседы)
  12. Если такой транспорт найден и он принадлежит другому пользователю, то это может быть задвоение пользователя в базе или какая-то ерунда? Что делать? А если ещё этот пользователь и принадлежит другому консультанту? 
  
XXI. Сообщения от внешнего нового транспорта с известным номером телефона
  1. Поиск телефона в таблице [Usr].[User] по номеру телефона
  2. Если номер найден, то заводим у пользователя новый канал в [Usr].[Transport]
    2.1. Если это клиент, то записываем сообщение в [Msg].[Message]
    [FromUserId] = Из п1. 
    [MessageTypeId] = 0
    [ToUserId] = личному консультанту пользователя
    [TransportId] = Идентификатор нового транспорта из п2.
    [TransportMsgId] = Если есть
    [Income] = 1
    2.2. Если это консультант, то зачем он это сделал? Кому адресовать сообщение?
  3. Если номер не найден, то надо завести нового пользователя в [Usr].[User], завести канал в [Usr].[Transport] и направить пользователя к "дежурному оператору".
   
XXXI. Приглашение клиента через ссылку в телеграмме
  1. Создаётся или новый клиент или для уже созданного клиента консультант формирует ссылку вида https://telegram.me/[OurBotName]?start=[TempToken] , где TempToken - сформированный уникальный идентификатор и записанный в таблицу [Msg].[TelegramToken] вместе с идентификатором клиента. 
  2. Ссылка отправляется каким-либо способом клиент (СМС, персональный аккаунт консультанта в телеграмме и др)
  3. См. III
  
XLI. Вход по номеру телефона
  1. Принимает номер телефона
  2. Проверяем наличие телефона в БД среди записей (Enabled = 1 IsConsultant = true)
  3. Если запись не найден, завершаем
  4. Если запись найдена, то
    4.1 генерируем код, записываем в таблицу [Usr].[AuthToken] ([TokenTypeId] = 1, Код, UserId, дата генерации, время жизни)
    4.2 отправялем СМС с кодом через (какой сервис для отправки СМС?)
    4.3 отвечаем ОК
  10. Принимаем код. 
  11. Ищем код в таблице, и если найден, то
    11.1 Генерируем токен для пользователя и сохраняем в [Usr].[AuthToken] ([TokenTypeId] = 0)
    11.2 Обновляем [Usr].[User].[SignUpDate] если NULL
    11.3 Отсылаем токен в ответе
    


Работа с ВК

Количество типов сообщений, приходящих от ВК на службу, может быть достаточно большим и не все они нам интересны в данный момент. Выделяем на первое время два типа - просто сообщение от клиента и запрос добавления в друзья. Все остальные пока остаются без рассмотрения и реакции на них.

MI. Входящее сообщение(событие), тип - персональное сообщение. V
  1. Проверяем идентификатор пользователя из V в таблице [Usr].[Transport] ([TransportTypeId] = VK AND [TransportOuterId] = V.from_id) 
  2. Если такая комбинация найдена, получаем [UserId], а из [Usr].[User] получаем вид пользователя. Если это клиент, для него получаем  [OwnerUserId], переадресуем сообщение менеджеру. к п.5.
  3. Если не найдена, то пытаемся получить из ВК как можно больше информации(телефон, имя и т.п.). Если найден хотя бы один из идентифицирующих параметров, то ищем его в информации о клиентах. Если нашли - то в [Usr].[Transport] добавляем запись о новом транспорте для известного пользователя. Сообщение переадресуем менеджеру. к п.5
  4. Если не найдены ни идентификатор клиента, ни его вспомогательные данные, то создаём нового клиента. и переадресуем его на "диспетчера", который продолжает личное общение и идентификацию.  [Usr].[User] - добавляем, [User].[Transport] добавляем запись и значения
    [UserId]
    [FromUserId] = пользователь из шага 1
    [MessageTypeId] = 0
    [ToUserId] = консультант(либо NULL если нет ещё)
    [TransportId] = транспорт из шага 1
    [TransportMsgId] = идентификатор сообщения из V
    [Income] = 1

  5. Фиксируем полученное сообщение в  [Msg].[Message]


 
  6. Если это НЕ клиент - то чего и как?


MII. Входящее сообщение(событие), тип - запрос в друзья.

(Временно отменяется - до выянения. У публичной страницы есть подписчики, нужно ли одобрение - непонятно)

  1. Проверить его на присутствие в БД. 
  2. Если его нет, то добавить нового клиента в [User].[User] и информацию о транспорте в [User].[Transport]. 
  3. Сделать пометку о запросе и дать ответ - добавить.



MIII.  

MIV. Исходящее сообщение


В данный момент наша страница является публичной(аналог сообщества, группы) поэтому общение от её имени будет только с отдельными клиентами, в группы и беседы писать не будем.

Фиксируем сообщение в Msg.Message и отправляем его клиенту. 
Заполняются следующие поля

user_id = [User].[Transport].[TransportOuterId]
random_id = Msg.Message.[Id] - а оно числовое?
peer_id = user_id
message = текст сообщения

